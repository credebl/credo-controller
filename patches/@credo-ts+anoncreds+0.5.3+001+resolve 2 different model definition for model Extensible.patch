diff --git a/node_modules/@credo-ts/anoncreds/build/AnonCredsApi.d.ts b/node_modules/@credo-ts/anoncreds/build/AnonCredsApi.d.ts
index e9d0a20..479b157 100644
--- a/node_modules/@credo-ts/anoncreds/build/AnonCredsApi.d.ts
+++ b/node_modules/@credo-ts/anoncreds/build/AnonCredsApi.d.ts
@@ -1,7 +1,7 @@
 import type { AnonCredsCreateLinkSecretOptions, AnonCredsRegisterCredentialDefinitionOptions, AnonCredsRegisterRevocationRegistryDefinitionOptions, AnonCredsRegisterRevocationStatusListOptions, AnonCredsUpdateRevocationStatusListOptions } from './AnonCredsApiOptions';
 import type { AnonCredsSchema } from './models';
 import type { GetCredentialDefinitionReturn, GetCredentialsOptions, GetRevocationRegistryDefinitionReturn, GetRevocationStatusListReturn, GetSchemaReturn, RegisterCredentialDefinitionReturn, RegisterSchemaReturn, RegisterRevocationRegistryDefinitionReturn, RegisterRevocationStatusListReturn } from './services';
-import type { Extensible } from './services/registry/base';
+import type { CredoExtensible } from './services/registry/base';
 import type { SimpleQuery } from '@credo-ts/core';
 import { AgentContext } from '@credo-ts/core';
 import { AnonCredsModuleConfig } from './AnonCredsModuleConfig';
@@ -41,28 +41,28 @@ export declare class AnonCredsApi {
      * with the {@link schemaId}
      */
     getSchema(schemaId: string): Promise<GetSchemaReturn>;
-    registerSchema<T extends Extensible = Extensible>(options: AnonCredsRegisterSchema<T>): Promise<RegisterSchemaReturn>;
+    registerSchema<T extends CredoExtensible = CredoExtensible>(options: AnonCredsRegisterSchema<T>): Promise<RegisterSchemaReturn>;
     getCreatedSchemas(query: SimpleQuery<AnonCredsSchemaRecord>): Promise<AnonCredsSchemaRecord[]>;
     /**
      * Retrieve a {@link GetCredentialDefinitionReturn} from the registry associated
      * with the {@link credentialDefinitionId}
      */
     getCredentialDefinition(credentialDefinitionId: string): Promise<GetCredentialDefinitionReturn>;
-    registerCredentialDefinition<T extends Extensible>(options: AnonCredsRegisterCredentialDefinition<T>): Promise<RegisterCredentialDefinitionReturn>;
+    registerCredentialDefinition<T extends CredoExtensible>(options: AnonCredsRegisterCredentialDefinition<T>): Promise<RegisterCredentialDefinitionReturn>;
     getCreatedCredentialDefinitions(query: SimpleQuery<AnonCredsCredentialDefinitionRecord>): Promise<AnonCredsCredentialDefinitionRecord[]>;
     /**
      * Retrieve a {@link AnonCredsRevocationRegistryDefinition} from the registry associated
      * with the {@link revocationRegistryDefinitionId}
      */
     getRevocationRegistryDefinition(revocationRegistryDefinitionId: string): Promise<GetRevocationRegistryDefinitionReturn>;
-    registerRevocationRegistryDefinition<T extends Extensible = Extensible>(options: AnonCredsRegisterRevocationRegistryDefinition<T>): Promise<RegisterRevocationRegistryDefinitionReturn>;
+    registerRevocationRegistryDefinition<T extends CredoExtensible = CredoExtensible>(options: AnonCredsRegisterRevocationRegistryDefinition<T>): Promise<RegisterRevocationRegistryDefinitionReturn>;
     /**
      * Retrieve the {@link AnonCredsRevocationStatusList} for the given {@link timestamp} from the registry associated
      * with the {@link revocationRegistryDefinitionId}
      */
     getRevocationStatusList(revocationRegistryDefinitionId: string, timestamp: number): Promise<GetRevocationStatusListReturn>;
-    registerRevocationStatusList<T extends Extensible = Extensible>(options: AnonCredsRegisterRevocationStatusList<T>): Promise<RegisterRevocationStatusListReturn>;
-    updateRevocationStatusList<T extends Extensible = Extensible>(options: AnonCredsUpdateRevocationStatusList<T>): Promise<RegisterRevocationStatusListReturn>;
+    registerRevocationStatusList<T extends CredoExtensible = CredoExtensible>(options: AnonCredsRegisterRevocationStatusList<T>): Promise<RegisterRevocationStatusListReturn>;
+    updateRevocationStatusList<T extends CredoExtensible = CredoExtensible>(options: AnonCredsUpdateRevocationStatusList<T>): Promise<RegisterRevocationStatusListReturn>;
     getCredential(id: string): Promise<import("./models").AnonCredsCredentialInfo>;
     getCredentials(options: GetCredentialsOptions): Promise<import("./models").AnonCredsCredentialInfo[]>;
     private storeRevocationRegistryDefinitionRecord;
@@ -74,23 +74,23 @@ export declare class AnonCredsApi {
 export interface AnonCredsRegisterCredentialDefinitionApiOptions {
     supportRevocation: boolean;
 }
-interface AnonCredsRegisterCredentialDefinition<T extends Extensible = Extensible> {
+interface AnonCredsRegisterCredentialDefinition<T extends CredoExtensible = CredoExtensible> {
     credentialDefinition: AnonCredsRegisterCredentialDefinitionOptions;
     options: T & AnonCredsRegisterCredentialDefinitionApiOptions;
 }
-interface AnonCredsRegisterSchema<T extends Extensible = Extensible> {
+interface AnonCredsRegisterSchema<T extends CredoExtensible = CredoExtensible> {
     schema: AnonCredsSchema;
     options: T;
 }
-interface AnonCredsRegisterRevocationRegistryDefinition<T extends Extensible = Extensible> {
+interface AnonCredsRegisterRevocationRegistryDefinition<T extends CredoExtensible = CredoExtensible> {
     revocationRegistryDefinition: AnonCredsRegisterRevocationRegistryDefinitionOptions;
     options: T;
 }
-interface AnonCredsRegisterRevocationStatusList<T extends Extensible = Extensible> {
+interface AnonCredsRegisterRevocationStatusList<T extends CredoExtensible = CredoExtensible> {
     revocationStatusList: AnonCredsRegisterRevocationStatusListOptions;
     options: T;
 }
-interface AnonCredsUpdateRevocationStatusList<T extends Extensible = Extensible> {
+interface AnonCredsUpdateRevocationStatusList<T extends CredoExtensible = CredoExtensible> {
     revocationStatusList: AnonCredsUpdateRevocationStatusListOptions;
     options: T;
 }
diff --git a/node_modules/@credo-ts/anoncreds/build/repository/anonCredsCredentialDefinitionRecordMetadataTypes.d.ts b/node_modules/@credo-ts/anoncreds/build/repository/anonCredsCredentialDefinitionRecordMetadataTypes.d.ts
index 2980520..0304d87 100644
--- a/node_modules/@credo-ts/anoncreds/build/repository/anonCredsCredentialDefinitionRecordMetadataTypes.d.ts
+++ b/node_modules/@credo-ts/anoncreds/build/repository/anonCredsCredentialDefinitionRecordMetadataTypes.d.ts
@@ -1,9 +1,9 @@
-import type { Extensible } from '../services/registry/base';
+import type { CredoExtensible } from '../services/registry/base';
 export declare enum AnonCredsCredentialDefinitionRecordMetadataKeys {
     CredentialDefinitionRegistrationMetadata = "_internal/anonCredsCredentialDefinitionRegistrationMetadata",
     CredentialDefinitionMetadata = "_internal/anonCredsCredentialDefinitionMetadata"
 }
 export type AnonCredsCredentialDefinitionRecordMetadata = {
-    [AnonCredsCredentialDefinitionRecordMetadataKeys.CredentialDefinitionRegistrationMetadata]: Extensible;
-    [AnonCredsCredentialDefinitionRecordMetadataKeys.CredentialDefinitionMetadata]: Extensible;
+    [AnonCredsCredentialDefinitionRecordMetadataKeys.CredentialDefinitionRegistrationMetadata]: CredoExtensible;
+    [AnonCredsCredentialDefinitionRecordMetadataKeys.CredentialDefinitionMetadata]: CredoExtensible;
 };
diff --git a/node_modules/@credo-ts/anoncreds/build/repository/anonCredsRevocationRegistryDefinitionRecordMetadataTypes.d.ts b/node_modules/@credo-ts/anoncreds/build/repository/anonCredsRevocationRegistryDefinitionRecordMetadataTypes.d.ts
index 25aea87..1b0c4aa 100644
--- a/node_modules/@credo-ts/anoncreds/build/repository/anonCredsRevocationRegistryDefinitionRecordMetadataTypes.d.ts
+++ b/node_modules/@credo-ts/anoncreds/build/repository/anonCredsRevocationRegistryDefinitionRecordMetadataTypes.d.ts
@@ -1,9 +1,9 @@
-import type { Extensible } from '../services/registry/base';
+import type { CredoExtensible } from '../services/registry/base';
 export declare enum AnonCredsRevocationRegistryDefinitionRecordMetadataKeys {
     RevocationRegistryDefinitionRegistrationMetadata = "_internal/anonCredsRevocationRegistryDefinitionRegistrationMetadata",
     RevocationRegistryDefinitionMetadata = "_internal/anonCredsRevocationRegistryDefinitionMetadata"
 }
 export type AnonCredsRevocationRegistryDefinitionRecordMetadata = {
-    [AnonCredsRevocationRegistryDefinitionRecordMetadataKeys.RevocationRegistryDefinitionRegistrationMetadata]: Extensible;
-    [AnonCredsRevocationRegistryDefinitionRecordMetadataKeys.RevocationRegistryDefinitionMetadata]: Extensible;
+    [AnonCredsRevocationRegistryDefinitionRecordMetadataKeys.RevocationRegistryDefinitionRegistrationMetadata]: CredoExtensible;
+    [AnonCredsRevocationRegistryDefinitionRecordMetadataKeys.RevocationRegistryDefinitionMetadata]: CredoExtensible;
 };
diff --git a/node_modules/@credo-ts/anoncreds/build/repository/anonCredsSchemaRecordMetadataTypes.d.ts b/node_modules/@credo-ts/anoncreds/build/repository/anonCredsSchemaRecordMetadataTypes.d.ts
index 452ec04..f66058d 100644
--- a/node_modules/@credo-ts/anoncreds/build/repository/anonCredsSchemaRecordMetadataTypes.d.ts
+++ b/node_modules/@credo-ts/anoncreds/build/repository/anonCredsSchemaRecordMetadataTypes.d.ts
@@ -1,9 +1,9 @@
-import type { Extensible } from '../services/registry/base';
+import type { CredoExtensible } from '../services/registry/base';
 export declare enum AnonCredsSchemaRecordMetadataKeys {
     SchemaRegistrationMetadata = "_internal/anonCredsSchemaRegistrationMetadata",
     SchemaMetadata = "_internal/anonCredsSchemaMetadata"
 }
 export type AnonCredsSchemaRecordMetadata = {
-    [AnonCredsSchemaRecordMetadataKeys.SchemaRegistrationMetadata]: Extensible;
-    [AnonCredsSchemaRecordMetadataKeys.SchemaMetadata]: Extensible;
+    [AnonCredsSchemaRecordMetadataKeys.SchemaRegistrationMetadata]: CredoExtensible;
+    [AnonCredsSchemaRecordMetadataKeys.SchemaMetadata]: CredoExtensible;
 };
diff --git a/node_modules/@credo-ts/anoncreds/build/services/registry/CredentialDefinitionOptions.d.ts b/node_modules/@credo-ts/anoncreds/build/services/registry/CredentialDefinitionOptions.d.ts
index 95c0949..aa82d57 100644
--- a/node_modules/@credo-ts/anoncreds/build/services/registry/CredentialDefinitionOptions.d.ts
+++ b/node_modules/@credo-ts/anoncreds/build/services/registry/CredentialDefinitionOptions.d.ts
@@ -1,14 +1,14 @@
-import type { AnonCredsOperationStateAction, AnonCredsOperationStateFailed, AnonCredsOperationStateFinished, AnonCredsOperationStateWait, AnonCredsResolutionMetadata, Extensible } from './base';
+import type { AnonCredsOperationStateAction, AnonCredsOperationStateFailed, AnonCredsOperationStateFinished, AnonCredsOperationStateWait, AnonCredsResolutionMetadata, CredoExtensible } from './base';
 import type { AnonCredsCredentialDefinition } from '../../models/registry';
 export interface GetCredentialDefinitionReturn {
     credentialDefinition?: AnonCredsCredentialDefinition;
     credentialDefinitionId: string;
     resolutionMetadata: AnonCredsResolutionMetadata;
-    credentialDefinitionMetadata: Extensible;
+    credentialDefinitionMetadata: CredoExtensible;
 }
 export interface RegisterCredentialDefinitionOptions {
     credentialDefinition: AnonCredsCredentialDefinition;
-    options: Extensible;
+    options: CredoExtensible;
 }
 export interface RegisterCredentialDefinitionReturnStateFailed extends AnonCredsOperationStateFailed {
     credentialDefinition?: AnonCredsCredentialDefinition;
@@ -29,6 +29,6 @@ export interface RegisterCredentialDefinitionReturnStateAction extends AnonCreds
 export interface RegisterCredentialDefinitionReturn {
     jobId?: string;
     credentialDefinitionState: RegisterCredentialDefinitionReturnStateWait | RegisterCredentialDefinitionReturnStateAction | RegisterCredentialDefinitionReturnStateFinished | RegisterCredentialDefinitionReturnStateFailed;
-    credentialDefinitionMetadata: Extensible;
-    registrationMetadata: Extensible;
+    credentialDefinitionMetadata: CredoExtensible;
+    registrationMetadata: CredoExtensible;
 }
diff --git a/node_modules/@credo-ts/anoncreds/build/services/registry/RevocationRegistryDefinitionOptions.d.ts b/node_modules/@credo-ts/anoncreds/build/services/registry/RevocationRegistryDefinitionOptions.d.ts
index e911d79..df4fa0b 100644
--- a/node_modules/@credo-ts/anoncreds/build/services/registry/RevocationRegistryDefinitionOptions.d.ts
+++ b/node_modules/@credo-ts/anoncreds/build/services/registry/RevocationRegistryDefinitionOptions.d.ts
@@ -1,14 +1,14 @@
-import type { AnonCredsOperationStateWait, AnonCredsOperationStateFailed, AnonCredsOperationStateFinished, AnonCredsResolutionMetadata, Extensible, AnonCredsOperationStateAction } from './base';
+import type { AnonCredsOperationStateWait, AnonCredsOperationStateFailed, AnonCredsOperationStateFinished, AnonCredsResolutionMetadata, CredoExtensible, AnonCredsOperationStateAction } from './base';
 import type { AnonCredsRevocationRegistryDefinition } from '../../models/registry';
 export interface GetRevocationRegistryDefinitionReturn {
     revocationRegistryDefinition?: AnonCredsRevocationRegistryDefinition;
     revocationRegistryDefinitionId: string;
     resolutionMetadata: AnonCredsResolutionMetadata;
-    revocationRegistryDefinitionMetadata: Extensible;
+    revocationRegistryDefinitionMetadata: CredoExtensible;
 }
 export interface RegisterRevocationRegistryDefinitionOptions {
     revocationRegistryDefinition: AnonCredsRevocationRegistryDefinition;
-    options: Extensible;
+    options: CredoExtensible;
 }
 export interface RegisterRevocationRegistryDefinitionReturnStateAction extends AnonCredsOperationStateAction {
     revocationRegistryDefinition: AnonCredsRevocationRegistryDefinition;
@@ -29,6 +29,6 @@ export interface RegisterRevocationRegistryDefinitionReturnStateFinished extends
 export interface RegisterRevocationRegistryDefinitionReturn {
     jobId?: string;
     revocationRegistryDefinitionState: RegisterRevocationRegistryDefinitionReturnStateWait | RegisterRevocationRegistryDefinitionReturnStateAction | RegisterRevocationRegistryDefinitionReturnStateFailed | RegisterRevocationRegistryDefinitionReturnStateFinished;
-    revocationRegistryDefinitionMetadata: Extensible;
-    registrationMetadata: Extensible;
+    revocationRegistryDefinitionMetadata: CredoExtensible;
+    registrationMetadata: CredoExtensible;
 }
diff --git a/node_modules/@credo-ts/anoncreds/build/services/registry/RevocationStatusListOptions.d.ts b/node_modules/@credo-ts/anoncreds/build/services/registry/RevocationStatusListOptions.d.ts
index b5ee11d..01b38dd 100644
--- a/node_modules/@credo-ts/anoncreds/build/services/registry/RevocationStatusListOptions.d.ts
+++ b/node_modules/@credo-ts/anoncreds/build/services/registry/RevocationStatusListOptions.d.ts
@@ -1,16 +1,16 @@
-import type { AnonCredsOperationStateWait, AnonCredsOperationStateFailed, AnonCredsOperationStateFinished, AnonCredsResolutionMetadata, Extensible, AnonCredsOperationStateAction } from './base';
+import type { AnonCredsOperationStateWait, AnonCredsOperationStateFailed, AnonCredsOperationStateFinished, AnonCredsResolutionMetadata, CredoExtensible, AnonCredsOperationStateAction } from './base';
 import type { AnonCredsRevocationStatusList } from '../../models/registry';
 import type { Optional } from '@credo-ts/core';
 export interface GetRevocationStatusListReturn {
     revocationStatusList?: AnonCredsRevocationStatusList;
     resolutionMetadata: AnonCredsResolutionMetadata;
-    revocationStatusListMetadata: Extensible;
+    revocationStatusListMetadata: CredoExtensible;
 }
 export type AnonCredsRevocationStatusListWithoutTimestamp = Omit<AnonCredsRevocationStatusList, 'timestamp'>;
 export type AnonCredsRevocationStatusListWithOptionalTimestamp = Optional<AnonCredsRevocationStatusList, 'timestamp'>;
 export interface RegisterRevocationStatusListOptions {
     revocationStatusList: AnonCredsRevocationStatusListWithoutTimestamp;
-    options: Extensible;
+    options: CredoExtensible;
 }
 export interface RegisterRevocationStatusListReturnStateAction extends AnonCredsOperationStateAction {
     revocationStatusList: AnonCredsRevocationStatusListWithOptionalTimestamp;
@@ -27,6 +27,6 @@ export interface RegisterRevocationStatusListReturnStateFinished extends AnonCre
 export interface RegisterRevocationStatusListReturn {
     jobId?: string;
     revocationStatusListState: RegisterRevocationStatusListReturnStateWait | RegisterRevocationStatusListReturnStateAction | RegisterRevocationStatusListReturnStateFailed | RegisterRevocationStatusListReturnStateFinished;
-    revocationStatusListMetadata: Extensible;
-    registrationMetadata: Extensible;
+    revocationStatusListMetadata: CredoExtensible;
+    registrationMetadata: CredoExtensible;
 }
diff --git a/node_modules/@credo-ts/anoncreds/build/services/registry/SchemaOptions.d.ts b/node_modules/@credo-ts/anoncreds/build/services/registry/SchemaOptions.d.ts
index 2743b39..6aee13e 100644
--- a/node_modules/@credo-ts/anoncreds/build/services/registry/SchemaOptions.d.ts
+++ b/node_modules/@credo-ts/anoncreds/build/services/registry/SchemaOptions.d.ts
@@ -1,14 +1,14 @@
-import type { AnonCredsOperationStateAction, AnonCredsOperationStateFailed, AnonCredsOperationStateFinished, AnonCredsOperationStateWait, AnonCredsResolutionMetadata, Extensible } from './base';
+import type { AnonCredsOperationStateAction, AnonCredsOperationStateFailed, AnonCredsOperationStateFinished, AnonCredsOperationStateWait, AnonCredsResolutionMetadata, CredoExtensible } from './base';
 import type { AnonCredsSchema } from '../../models/registry';
 export interface GetSchemaReturn {
     schema?: AnonCredsSchema;
     schemaId: string;
     resolutionMetadata: AnonCredsResolutionMetadata;
-    schemaMetadata: Extensible;
+    schemaMetadata: CredoExtensible;
 }
 export interface RegisterSchemaOptions {
     schema: AnonCredsSchema;
-    options: Extensible;
+    options: CredoExtensible;
 }
 export interface RegisterSchemaReturnStateFailed extends AnonCredsOperationStateFailed {
     schema?: AnonCredsSchema;
@@ -29,6 +29,6 @@ export interface RegisterSchemaReturnStateWait extends AnonCredsOperationStateWa
 export interface RegisterSchemaReturn {
     jobId?: string;
     schemaState: RegisterSchemaReturnStateWait | RegisterSchemaReturnStateAction | RegisterSchemaReturnStateFinished | RegisterSchemaReturnStateFailed;
-    schemaMetadata: Extensible;
-    registrationMetadata: Extensible;
+    schemaMetadata: CredoExtensible;
+    registrationMetadata: CredoExtensible;
 }
diff --git a/node_modules/@credo-ts/anoncreds/build/services/registry/base.d.ts b/node_modules/@credo-ts/anoncreds/build/services/registry/base.d.ts
index 3b37667..931bcc6 100644
--- a/node_modules/@credo-ts/anoncreds/build/services/registry/base.d.ts
+++ b/node_modules/@credo-ts/anoncreds/build/services/registry/base.d.ts
@@ -1,4 +1,4 @@
-export type Extensible = Record<string, unknown>;
+export type CredoExtensible = Record<string, unknown>;
 export interface AnonCredsOperationStateWait {
     state: 'wait';
 }
@@ -13,7 +13,7 @@ export interface AnonCredsOperationStateFailed {
     state: 'failed';
     reason: string;
 }
-export interface AnonCredsResolutionMetadata extends Extensible {
+export interface AnonCredsResolutionMetadata extends CredoExtensible {
     error?: 'invalid' | 'notFound' | 'unsupportedAnonCredsMethod' | string;
     message?: string;
 }
